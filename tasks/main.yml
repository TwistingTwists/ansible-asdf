---
- name: Check if asdf {{ asdf_version }} already installed
  stat:
    path: /opt/asdf-{{ asdf_version }}
  register: asdf_directory
  tags: asdf
- name: Download asdf {{ asdf_version }}
  get_url:
    url: "https://github.com/asdf-vm/asdf/archive/v{{ asdf_version }}.tar.gz"
    checksum: "sha256:{{ asdf_sha256 }}"
    dest: "/tmp/asdf-{{ asdf_version }}.tar.gz"
  tags: asdf
  when: not asdf_directory.stat.exists
- name: Create asdf-{{ asdf_version }} directory
  file:
    path: "/opt/asdf-{{ asdf_version }}"
    state: directory
    mode: 0755
  tags: asdf
- name: Install asdf {{ asdf_version }}
  unarchive:
    src: "/tmp/asdf-{{ asdf_version }}.tar.gz"
    extra_opts:
      - "--strip-components=1"
    dest: "/opt/asdf-{{ asdf_version }}"
    remote_src: yes
  tags: asdf
  when: not asdf_directory.stat.exists
- name: Symlink default asdf
  file:
    src: "asdf-{{ asdf_version }}"
    dest: "/opt/asdf"
    state: link
  tags: asdf
- name: Install asdf to the path and enable root controlled configuration
  blockinfile:
    path: /etc/bash.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK asdf"
    block: |
      export ASDF_DATA_DIR=/opt/asdf
      . /opt/asdf/asdf.sh
  tags: asdf
  when: asdf_root_user_approach
- name: Install asdf to the path and enable user controlled configuration
  blockinfile:
    path: /etc/bash.bashrc
    marker: "# {mark} ANSIBLE MANAGED BLOCK asdf"
    block: |
      . /opt/asdf/asdf.sh
  tags: asdf
  when: not asdf_root_user_approach
- name: Make sure /etc/bash_completion.d exists
  file:
    path: /etc/bash_completion.d/
    state: directory
    mode: 0755
  tags: asdf
- name: Symlink asdf bash completion
  file:
    src: "/opt/asdf/completions/asdf.bash"
    dest: "/etc/bash_completion.d/asdf_completer"
    state: link
  tags: asdf
